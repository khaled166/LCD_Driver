
LCD_Session.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000400  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000454  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000454  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000484  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  000004c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e59  00000000  00000000  00000578  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000730  00000000  00000000  000013d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000697  00000000  00000000  00001b01  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000014c  00000000  00000000  00002198  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000461  00000000  00000000  000022e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000070a  00000000  00000000  00002745  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  00002e4f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 f7 01 	call	0x3ee	; 0x3ee <main>
  64:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_SetpinDirection>:
		break;
		case DIO_PORTC:
		PORTC=val;
		break;
		case DIO_PORTD:
		PORTD=val;
  6c:	44 23       	and	r20, r20
  6e:	b9 f1       	breq	.+110    	; 0xde <DIO_SetpinDirection+0x72>
  70:	41 30       	cpi	r20, 0x01	; 1
  72:	09 f0       	breq	.+2      	; 0x76 <DIO_SetpinDirection+0xa>
  74:	6b c0       	rjmp	.+214    	; 0x14c <DIO_SetpinDirection+0xe0>
  76:	81 30       	cpi	r24, 0x01	; 1
  78:	89 f0       	breq	.+34     	; 0x9c <DIO_SetpinDirection+0x30>
  7a:	28 f0       	brcs	.+10     	; 0x86 <DIO_SetpinDirection+0x1a>
  7c:	82 30       	cpi	r24, 0x02	; 2
  7e:	c9 f0       	breq	.+50     	; 0xb2 <DIO_SetpinDirection+0x46>
  80:	83 30       	cpi	r24, 0x03	; 3
  82:	11 f1       	breq	.+68     	; 0xc8 <DIO_SetpinDirection+0x5c>
  84:	08 95       	ret
  86:	2a b3       	in	r18, 0x1a	; 26
  88:	81 e0       	ldi	r24, 0x01	; 1
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	02 c0       	rjmp	.+4      	; 0x92 <DIO_SetpinDirection+0x26>
  8e:	88 0f       	add	r24, r24
  90:	99 1f       	adc	r25, r25
  92:	6a 95       	dec	r22
  94:	e2 f7       	brpl	.-8      	; 0x8e <DIO_SetpinDirection+0x22>
  96:	82 2b       	or	r24, r18
  98:	8a bb       	out	0x1a, r24	; 26
  9a:	08 95       	ret
  9c:	27 b3       	in	r18, 0x17	; 23
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <DIO_SetpinDirection+0x3c>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <DIO_SetpinDirection+0x38>
  ac:	82 2b       	or	r24, r18
  ae:	87 bb       	out	0x17, r24	; 23
  b0:	08 95       	ret
  b2:	24 b3       	in	r18, 0x14	; 20
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_SetpinDirection+0x52>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_SetpinDirection+0x4e>
  c2:	82 2b       	or	r24, r18
  c4:	84 bb       	out	0x14, r24	; 20
  c6:	08 95       	ret
  c8:	21 b3       	in	r18, 0x11	; 17
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_SetpinDirection+0x68>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_SetpinDirection+0x64>
  d8:	82 2b       	or	r24, r18
  da:	81 bb       	out	0x11, r24	; 17
  dc:	08 95       	ret
  de:	81 30       	cpi	r24, 0x01	; 1
  e0:	91 f0       	breq	.+36     	; 0x106 <DIO_SetpinDirection+0x9a>
  e2:	28 f0       	brcs	.+10     	; 0xee <DIO_SetpinDirection+0x82>
  e4:	82 30       	cpi	r24, 0x02	; 2
  e6:	d9 f0       	breq	.+54     	; 0x11e <DIO_SetpinDirection+0xb2>
  e8:	83 30       	cpi	r24, 0x03	; 3
  ea:	29 f1       	breq	.+74     	; 0x136 <DIO_SetpinDirection+0xca>
  ec:	08 95       	ret
  ee:	2a b3       	in	r18, 0x1a	; 26
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_SetpinDirection+0x8e>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	6a 95       	dec	r22
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_SetpinDirection+0x8a>
  fe:	80 95       	com	r24
 100:	82 23       	and	r24, r18
 102:	8a bb       	out	0x1a, r24	; 26
 104:	08 95       	ret
 106:	27 b3       	in	r18, 0x17	; 23
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	02 c0       	rjmp	.+4      	; 0x112 <DIO_SetpinDirection+0xa6>
 10e:	88 0f       	add	r24, r24
 110:	99 1f       	adc	r25, r25
 112:	6a 95       	dec	r22
 114:	e2 f7       	brpl	.-8      	; 0x10e <DIO_SetpinDirection+0xa2>
 116:	80 95       	com	r24
 118:	82 23       	and	r24, r18
 11a:	87 bb       	out	0x17, r24	; 23
 11c:	08 95       	ret
 11e:	24 b3       	in	r18, 0x14	; 20
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	02 c0       	rjmp	.+4      	; 0x12a <DIO_SetpinDirection+0xbe>
 126:	88 0f       	add	r24, r24
 128:	99 1f       	adc	r25, r25
 12a:	6a 95       	dec	r22
 12c:	e2 f7       	brpl	.-8      	; 0x126 <DIO_SetpinDirection+0xba>
 12e:	80 95       	com	r24
 130:	82 23       	and	r24, r18
 132:	84 bb       	out	0x14, r24	; 20
 134:	08 95       	ret
 136:	21 b3       	in	r18, 0x11	; 17
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	02 c0       	rjmp	.+4      	; 0x142 <DIO_SetpinDirection+0xd6>
 13e:	88 0f       	add	r24, r24
 140:	99 1f       	adc	r25, r25
 142:	6a 95       	dec	r22
 144:	e2 f7       	brpl	.-8      	; 0x13e <DIO_SetpinDirection+0xd2>
 146:	80 95       	com	r24
 148:	82 23       	and	r24, r18
 14a:	81 bb       	out	0x11, r24	; 17
 14c:	08 95       	ret

0000014e <DIO_Writepin>:
		default:
		break;
	}
}
void DIO_Writepin(uint8 port,uint8 pin,uint8 val){
	switch(val){
 14e:	44 23       	and	r20, r20
 150:	b9 f1       	breq	.+110    	; 0x1c0 <DIO_Writepin+0x72>
 152:	41 30       	cpi	r20, 0x01	; 1
 154:	09 f0       	breq	.+2      	; 0x158 <DIO_Writepin+0xa>
 156:	6b c0       	rjmp	.+214    	; 0x22e <DIO_Writepin+0xe0>
		case DIO_PIN_HIGH:
		switch(port){
 158:	81 30       	cpi	r24, 0x01	; 1
 15a:	89 f0       	breq	.+34     	; 0x17e <DIO_Writepin+0x30>
 15c:	28 f0       	brcs	.+10     	; 0x168 <DIO_Writepin+0x1a>
 15e:	82 30       	cpi	r24, 0x02	; 2
 160:	c9 f0       	breq	.+50     	; 0x194 <DIO_Writepin+0x46>
 162:	83 30       	cpi	r24, 0x03	; 3
 164:	11 f1       	breq	.+68     	; 0x1aa <DIO_Writepin+0x5c>
 166:	08 95       	ret
			case DIO_PORTA:
			SET_BIT(PORTA,pin);
 168:	2b b3       	in	r18, 0x1b	; 27
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	02 c0       	rjmp	.+4      	; 0x174 <DIO_Writepin+0x26>
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	6a 95       	dec	r22
 176:	e2 f7       	brpl	.-8      	; 0x170 <DIO_Writepin+0x22>
 178:	82 2b       	or	r24, r18
 17a:	8b bb       	out	0x1b, r24	; 27
			break;
 17c:	08 95       	ret
			case DIO_PORTB:
			SET_BIT(PORTB,pin);
 17e:	28 b3       	in	r18, 0x18	; 24
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	06 2e       	mov	r0, r22
 186:	02 c0       	rjmp	.+4      	; 0x18c <DIO_Writepin+0x3e>
 188:	88 0f       	add	r24, r24
 18a:	99 1f       	adc	r25, r25
 18c:	0a 94       	dec	r0
 18e:	e2 f7       	brpl	.-8      	; 0x188 <DIO_Writepin+0x3a>
 190:	82 2b       	or	r24, r18
 192:	88 bb       	out	0x18, r24	; 24
			case DIO_PORTC:
			SET_BIT(PORTC,pin);
 194:	25 b3       	in	r18, 0x15	; 21
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_Writepin+0x52>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_Writepin+0x4e>
 1a4:	82 2b       	or	r24, r18
 1a6:	85 bb       	out	0x15, r24	; 21
			break;
 1a8:	08 95       	ret
			case DIO_PORTD:
			SET_BIT(PORTD,pin);
 1aa:	22 b3       	in	r18, 0x12	; 18
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_Writepin+0x68>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_Writepin+0x64>
 1ba:	82 2b       	or	r24, r18
 1bc:	82 bb       	out	0x12, r24	; 18
			break;
 1be:	08 95       	ret
			default:
			break;
		}
		break;
		case DIO_PIN_LOW:
		switch(port){
 1c0:	81 30       	cpi	r24, 0x01	; 1
 1c2:	91 f0       	breq	.+36     	; 0x1e8 <DIO_Writepin+0x9a>
 1c4:	28 f0       	brcs	.+10     	; 0x1d0 <DIO_Writepin+0x82>
 1c6:	82 30       	cpi	r24, 0x02	; 2
 1c8:	d9 f0       	breq	.+54     	; 0x200 <DIO_Writepin+0xb2>
 1ca:	83 30       	cpi	r24, 0x03	; 3
 1cc:	29 f1       	breq	.+74     	; 0x218 <DIO_Writepin+0xca>
 1ce:	08 95       	ret
			case DIO_PORTA:
			CLR_BIT(PORTA,pin);
 1d0:	2b b3       	in	r18, 0x1b	; 27
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <DIO_Writepin+0x8e>
 1d8:	88 0f       	add	r24, r24
 1da:	99 1f       	adc	r25, r25
 1dc:	6a 95       	dec	r22
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <DIO_Writepin+0x8a>
 1e0:	80 95       	com	r24
 1e2:	82 23       	and	r24, r18
 1e4:	8b bb       	out	0x1b, r24	; 27
			break;
 1e6:	08 95       	ret
			case DIO_PORTB:
			CLR_BIT(PORTB,pin);
 1e8:	28 b3       	in	r18, 0x18	; 24
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <DIO_Writepin+0xa6>
 1f0:	88 0f       	add	r24, r24
 1f2:	99 1f       	adc	r25, r25
 1f4:	6a 95       	dec	r22
 1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <DIO_Writepin+0xa2>
 1f8:	80 95       	com	r24
 1fa:	82 23       	and	r24, r18
 1fc:	88 bb       	out	0x18, r24	; 24
			break;
 1fe:	08 95       	ret
			case DIO_PORTC:
			CLR_BIT(PORTC,pin);
 200:	25 b3       	in	r18, 0x15	; 21
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_Writepin+0xbe>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	6a 95       	dec	r22
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_Writepin+0xba>
 210:	80 95       	com	r24
 212:	82 23       	and	r24, r18
 214:	85 bb       	out	0x15, r24	; 21
			break;
 216:	08 95       	ret
			case DIO_PORTD:
			CLR_BIT(PORTD,pin);
 218:	22 b3       	in	r18, 0x12	; 18
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	02 c0       	rjmp	.+4      	; 0x224 <DIO_Writepin+0xd6>
 220:	88 0f       	add	r24, r24
 222:	99 1f       	adc	r25, r25
 224:	6a 95       	dec	r22
 226:	e2 f7       	brpl	.-8      	; 0x220 <DIO_Writepin+0xd2>
 228:	80 95       	com	r24
 22a:	82 23       	and	r24, r18
 22c:	82 bb       	out	0x12, r24	; 18
 22e:	08 95       	ret

00000230 <LCD_WriteCommand>:
		
	#endif	
}


void LCD_WriteCommand(uint8 cmd){
 230:	cf 93       	push	r28
 232:	c8 2f       	mov	r28, r24
 	DIO_Writepin(LCD_8BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_LOW);
    _delay_ms(5);

	#elif  LCD_MODE ==4
	
	DIO_Writepin(LCD_4BIT_CMND_PORT,LCD_RW_PIN,DIO_PIN_LOW);
 234:	88 b3       	in	r24, 0x18	; 24
 236:	40 e0       	ldi	r20, 0x00	; 0
 238:	62 e0       	ldi	r22, 0x02	; 2
 23a:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_Writepin>
	DIO_Writepin(LCD_4BIT_CMND_PORT,LCD_RS_PIN,DIO_PIN_LOW);
 23e:	88 b3       	in	r24, 0x18	; 24
 240:	40 e0       	ldi	r20, 0x00	; 0
 242:	61 e0       	ldi	r22, 0x01	; 1
 244:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_Writepin>
	DIO_Writepin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_LOW);
 248:	88 b3       	in	r24, 0x18	; 24
 24a:	40 e0       	ldi	r20, 0x00	; 0
 24c:	63 e0       	ldi	r22, 0x03	; 3
 24e:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_Writepin>
	
	LCD_4BIT_DATA_PORT=(cmd&0xF0);
 252:	8c 2f       	mov	r24, r28
 254:	80 7f       	andi	r24, 0xF0	; 240
 256:	88 bb       	out	0x18, r24	; 24
	
	DIO_Writepin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_HIGH);
 258:	88 b3       	in	r24, 0x18	; 24
 25a:	41 e0       	ldi	r20, 0x01	; 1
 25c:	63 e0       	ldi	r22, 0x03	; 3
 25e:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_Writepin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 262:	89 ef       	ldi	r24, 0xF9	; 249
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	01 97       	sbiw	r24, 0x01	; 1
 268:	f1 f7       	brne	.-4      	; 0x266 <LCD_WriteCommand+0x36>
 26a:	00 c0       	rjmp	.+0      	; 0x26c <LCD_WriteCommand+0x3c>
 26c:	00 00       	nop
	_delay_ms(1);
	DIO_Writepin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_LOW);
 26e:	88 b3       	in	r24, 0x18	; 24
 270:	40 e0       	ldi	r20, 0x00	; 0
 272:	63 e0       	ldi	r22, 0x03	; 3
 274:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_Writepin>
	
	LCD_4BIT_DATA_PORT=(cmd<<4);
 278:	c2 95       	swap	r28
 27a:	c0 7f       	andi	r28, 0xF0	; 240
 27c:	c8 bb       	out	0x18, r28	; 24
	
	DIO_Writepin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_HIGH);
 27e:	88 b3       	in	r24, 0x18	; 24
 280:	41 e0       	ldi	r20, 0x01	; 1
 282:	63 e0       	ldi	r22, 0x03	; 3
 284:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_Writepin>
 288:	89 ef       	ldi	r24, 0xF9	; 249
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	01 97       	sbiw	r24, 0x01	; 1
 28e:	f1 f7       	brne	.-4      	; 0x28c <LCD_WriteCommand+0x5c>
 290:	00 c0       	rjmp	.+0      	; 0x292 <LCD_WriteCommand+0x62>
 292:	00 00       	nop
	_delay_ms(1);
	DIO_Writepin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_LOW);
 294:	88 b3       	in	r24, 0x18	; 24
 296:	40 e0       	ldi	r20, 0x00	; 0
 298:	63 e0       	ldi	r22, 0x03	; 3
 29a:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_Writepin>
 29e:	81 ee       	ldi	r24, 0xE1	; 225
 2a0:	94 e0       	ldi	r25, 0x04	; 4
 2a2:	01 97       	sbiw	r24, 0x01	; 1
 2a4:	f1 f7       	brne	.-4      	; 0x2a2 <LCD_WriteCommand+0x72>
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <LCD_WriteCommand+0x78>
 2a8:	00 00       	nop
	
	_delay_ms(5);

	
	#endif
}
 2aa:	cf 91       	pop	r28
 2ac:	08 95       	ret

000002ae <LCD_Init>:
		_delay_ms(5);

	
	#elif   LCD_MODE==4  
	//COMMAND_DIRECTION_4BIT_MODE
	DIO_SetpinDirection(LCD_4BIT_CMND_PORT,LCD_RS_PIN,DIO_OUTPUT);
 2ae:	88 b3       	in	r24, 0x18	; 24
 2b0:	41 e0       	ldi	r20, 0x01	; 1
 2b2:	61 e0       	ldi	r22, 0x01	; 1
 2b4:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetpinDirection>
	DIO_SetpinDirection(LCD_4BIT_CMND_PORT,LCD_RW_PIN,DIO_OUTPUT);
 2b8:	88 b3       	in	r24, 0x18	; 24
 2ba:	41 e0       	ldi	r20, 0x01	; 1
 2bc:	62 e0       	ldi	r22, 0x02	; 2
 2be:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetpinDirection>
	DIO_SetpinDirection(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_OUTPUT);
 2c2:	88 b3       	in	r24, 0x18	; 24
 2c4:	41 e0       	ldi	r20, 0x01	; 1
 2c6:	63 e0       	ldi	r22, 0x03	; 3
 2c8:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetpinDirection>
	
	
	//DATA_DIRECTIION FOR 4BIT MODE
	DIO_SetpinDirection(LCD_4BIT_DATA_PORT,LCD_DATA4_PIN,DIO_OUTPUT);
 2cc:	88 b3       	in	r24, 0x18	; 24
 2ce:	41 e0       	ldi	r20, 0x01	; 1
 2d0:	64 e0       	ldi	r22, 0x04	; 4
 2d2:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetpinDirection>
	DIO_SetpinDirection(LCD_4BIT_DATA_PORT,LCD_DATA5_PIN,DIO_OUTPUT);
 2d6:	88 b3       	in	r24, 0x18	; 24
 2d8:	41 e0       	ldi	r20, 0x01	; 1
 2da:	65 e0       	ldi	r22, 0x05	; 5
 2dc:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetpinDirection>
	DIO_SetpinDirection(LCD_4BIT_DATA_PORT,LCD_DATA6_PIN,DIO_OUTPUT);
 2e0:	88 b3       	in	r24, 0x18	; 24
 2e2:	41 e0       	ldi	r20, 0x01	; 1
 2e4:	66 e0       	ldi	r22, 0x06	; 6
 2e6:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetpinDirection>
	DIO_SetpinDirection(LCD_4BIT_DATA_PORT,LCD_DATA7_PIN,DIO_OUTPUT);
 2ea:	88 b3       	in	r24, 0x18	; 24
 2ec:	41 e0       	ldi	r20, 0x01	; 1
 2ee:	67 e0       	ldi	r22, 0x07	; 7
 2f0:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetpinDirection>
 2f4:	87 ea       	ldi	r24, 0xA7	; 167
 2f6:	91 e6       	ldi	r25, 0x61	; 97
 2f8:	01 97       	sbiw	r24, 0x01	; 1
 2fa:	f1 f7       	brne	.-4      	; 0x2f8 <LCD_Init+0x4a>
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <LCD_Init+0x50>
 2fe:	00 00       	nop

		_delay_ms(100);	
		
		/*(0x33,0x32,0x28 RESPICTIVLLY) WORK AT 4-BIT MODE*/
		LCD_WriteCommand(0x33);
 300:	83 e3       	ldi	r24, 0x33	; 51
 302:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WriteCommand>
		LCD_WriteCommand(0x32);
 306:	82 e3       	ldi	r24, 0x32	; 50
 308:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WriteCommand>
		LCD_WriteCommand(0x28);
 30c:	88 e2       	ldi	r24, 0x28	; 40
 30e:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WriteCommand>
		LCD_WriteCommand(0x0C);     //TOGGLE CURSOR
 312:	8c e0       	ldi	r24, 0x0C	; 12
 314:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WriteCommand>
		LCD_WriteCommand(0x01);     //CLEAR LCD SCREEN
 318:	81 e0       	ldi	r24, 0x01	; 1
 31a:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WriteCommand>
 31e:	87 e8       	ldi	r24, 0x87	; 135
 320:	93 e1       	ldi	r25, 0x13	; 19
 322:	01 97       	sbiw	r24, 0x01	; 1
 324:	f1 f7       	brne	.-4      	; 0x322 <LCD_Init+0x74>
 326:	00 c0       	rjmp	.+0      	; 0x328 <LCD_Init+0x7a>
 328:	00 00       	nop
		_delay_ms(20);
		LCD_WriteCommand(0x06);    //CURSOR AUTOMATICLLY POINT TO NEXT EMPTY ADDRESS(SHIFT CURSOR TO RIGHT)
 32a:	86 e0       	ldi	r24, 0x06	; 6
 32c:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WriteCommand>
		LCD_WriteCommand(0x02);    //CURSOR RETURN HOME COMMAND
 330:	82 e0       	ldi	r24, 0x02	; 2
 332:	0e 94 18 01 	call	0x230	; 0x230 <LCD_WriteCommand>
 336:	81 ee       	ldi	r24, 0xE1	; 225
 338:	94 e0       	ldi	r25, 0x04	; 4
 33a:	01 97       	sbiw	r24, 0x01	; 1
 33c:	f1 f7       	brne	.-4      	; 0x33a <LCD_Init+0x8c>
 33e:	00 c0       	rjmp	.+0      	; 0x340 <LCD_Init+0x92>
 340:	00 00       	nop
 342:	08 95       	ret

00000344 <LCD_Writechar>:
	_delay_ms(5);

	
	#endif
}
void LCD_Writechar(uint8 DATA ){
 344:	cf 93       	push	r28
 346:	c8 2f       	mov	r28, r24
	DIO_Writepin(LCD_8BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_LOW);
	_delay_ms(5);

	#elif  LCD_MODE ==4
	
	DIO_Writepin(LCD_4BIT_CMND_PORT,LCD_RW_PIN,DIO_PIN_LOW);
 348:	88 b3       	in	r24, 0x18	; 24
 34a:	40 e0       	ldi	r20, 0x00	; 0
 34c:	62 e0       	ldi	r22, 0x02	; 2
 34e:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_Writepin>
	DIO_Writepin(LCD_4BIT_CMND_PORT,LCD_RS_PIN,DIO_PIN_LOW);
 352:	88 b3       	in	r24, 0x18	; 24
 354:	40 e0       	ldi	r20, 0x00	; 0
 356:	61 e0       	ldi	r22, 0x01	; 1
 358:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_Writepin>
	DIO_Writepin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_LOW);
 35c:	88 b3       	in	r24, 0x18	; 24
 35e:	40 e0       	ldi	r20, 0x00	; 0
 360:	63 e0       	ldi	r22, 0x03	; 3
 362:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_Writepin>
	
	LCD_4BIT_DATA_PORT=(DATA&0xF0);
 366:	8c 2f       	mov	r24, r28
 368:	80 7f       	andi	r24, 0xF0	; 240
 36a:	88 bb       	out	0x18, r24	; 24
	
	DIO_Writepin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_HIGH);
 36c:	88 b3       	in	r24, 0x18	; 24
 36e:	41 e0       	ldi	r20, 0x01	; 1
 370:	63 e0       	ldi	r22, 0x03	; 3
 372:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_Writepin>
 376:	89 ef       	ldi	r24, 0xF9	; 249
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	01 97       	sbiw	r24, 0x01	; 1
 37c:	f1 f7       	brne	.-4      	; 0x37a <LCD_Writechar+0x36>
 37e:	00 c0       	rjmp	.+0      	; 0x380 <LCD_Writechar+0x3c>
 380:	00 00       	nop
	_delay_ms(1);
	DIO_Writepin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_LOW);
 382:	88 b3       	in	r24, 0x18	; 24
 384:	40 e0       	ldi	r20, 0x00	; 0
 386:	63 e0       	ldi	r22, 0x03	; 3
 388:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_Writepin>
	
	LCD_4BIT_DATA_PORT=(DATA<<4);
 38c:	c2 95       	swap	r28
 38e:	c0 7f       	andi	r28, 0xF0	; 240
 390:	c8 bb       	out	0x18, r28	; 24
	
	DIO_Writepin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_HIGH);
 392:	88 b3       	in	r24, 0x18	; 24
 394:	41 e0       	ldi	r20, 0x01	; 1
 396:	63 e0       	ldi	r22, 0x03	; 3
 398:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_Writepin>
 39c:	89 ef       	ldi	r24, 0xF9	; 249
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	01 97       	sbiw	r24, 0x01	; 1
 3a2:	f1 f7       	brne	.-4      	; 0x3a0 <LCD_Writechar+0x5c>
 3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <LCD_Writechar+0x62>
 3a6:	00 00       	nop
	_delay_ms(1);
	DIO_Writepin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_LOW);
 3a8:	88 b3       	in	r24, 0x18	; 24
 3aa:	40 e0       	ldi	r20, 0x00	; 0
 3ac:	63 e0       	ldi	r22, 0x03	; 3
 3ae:	0e 94 a7 00 	call	0x14e	; 0x14e <DIO_Writepin>
 3b2:	81 ee       	ldi	r24, 0xE1	; 225
 3b4:	94 e0       	ldi	r25, 0x04	; 4
 3b6:	01 97       	sbiw	r24, 0x01	; 1
 3b8:	f1 f7       	brne	.-4      	; 0x3b6 <LCD_Writechar+0x72>
 3ba:	00 c0       	rjmp	.+0      	; 0x3bc <LCD_Writechar+0x78>
 3bc:	00 00       	nop
	
	_delay_ms(5);

	
	#endif
}
 3be:	cf 91       	pop	r28
 3c0:	08 95       	ret

000003c2 <LCD_WriteString>:
void LCD_WriteString(uint8 *str){
 3c2:	0f 93       	push	r16
 3c4:	1f 93       	push	r17
 3c6:	cf 93       	push	r28
 3c8:	fc 01       	movw	r30, r24
	uint8 i=0;
	while(str[i]!='\0'){
 3ca:	80 81       	ld	r24, Z
 3cc:	88 23       	and	r24, r24
 3ce:	59 f0       	breq	.+22     	; 0x3e6 <LCD_WriteString+0x24>
 3d0:	8f 01       	movw	r16, r30
 3d2:	c0 e0       	ldi	r28, 0x00	; 0
		LCD_Writechar(str[i]);
 3d4:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Writechar>
		i++;
 3d8:	cf 5f       	subi	r28, 0xFF	; 255
	
	#endif
}
void LCD_WriteString(uint8 *str){
	uint8 i=0;
	while(str[i]!='\0'){
 3da:	f8 01       	movw	r30, r16
 3dc:	ec 0f       	add	r30, r28
 3de:	f1 1d       	adc	r31, r1
 3e0:	80 81       	ld	r24, Z
 3e2:	81 11       	cpse	r24, r1
 3e4:	f7 cf       	rjmp	.-18     	; 0x3d4 <LCD_WriteString+0x12>
		LCD_Writechar(str[i]);
		i++;
	}
}
 3e6:	cf 91       	pop	r28
 3e8:	1f 91       	pop	r17
 3ea:	0f 91       	pop	r16
 3ec:	08 95       	ret

000003ee <main>:
#include "LCD.h"


int main(void)
{
	LCD_Init();
 3ee:	0e 94 57 01 	call	0x2ae	; 0x2ae <LCD_Init>
	
	LCD_WriteString('Welecome');
 3f2:	85 e6       	ldi	r24, 0x65	; 101
 3f4:	9d e6       	ldi	r25, 0x6D	; 109
 3f6:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <LCD_WriteString>
 3fa:	ff cf       	rjmp	.-2      	; 0x3fa <main+0xc>

000003fc <_exit>:
 3fc:	f8 94       	cli

000003fe <__stop_program>:
 3fe:	ff cf       	rjmp	.-2      	; 0x3fe <__stop_program>
